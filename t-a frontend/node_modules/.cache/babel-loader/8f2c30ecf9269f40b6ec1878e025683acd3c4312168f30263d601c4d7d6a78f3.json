{"ast":null,"code":"var _jsxFileName = \"/Users/khalil/text-analyser/src/components/TextInput.js\",\n  _s = $RefreshSig$();\n// src/components/TextInput.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextInput = ({\n  onSubmit\n}) => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputText.trim()) {\n      onSubmit(inputText); // Pass the text to the parent component (App)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"Paste your text here...\",\n        rows: \"5\",\n        cols: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Analyze Text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n_s(TextInput, \"wAh2Cv8Kk70PfbjrJimBRYwxb6g=\");\n_c = TextInput;\nexport default TextInput;\nvar _c;\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextInput","onSubmit","_s","inputText","setInputText","handleSubmit","e","preventDefault","trim","children","value","onChange","target","placeholder","rows","cols","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/khalil/text-analyser/src/components/TextInput.js"],"sourcesContent":["// src/components/TextInput.js\nimport React, {\n  useState\n} from 'react';\n\nconst TextInput = ({\n  onSubmit\n}) => {\n  const [inputText, setInputText] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputText.trim()) {\n      onSubmit(inputText); // Pass the text to the parent component (App)\n    }\n  };\n\n  return ( <\n    div >\n    <\n    form onSubmit = {\n      handleSubmit\n    } >\n    <\n    textarea value = {\n      inputText\n    }\n    onChange = {\n      (e) => setInputText(e.target.value)\n    }\n    placeholder = \"Paste your text here...\"\n    rows = \"5\"\n    cols = \"50\" /\n    >\n    <\n    br / >\n    <\n    button type = \"submit\" > Analyze Text < /button> < /\n    form > <\n    /div>\n  );\n};\n\nexport default TextInput;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IACVC,QAAQ,QACH,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEf,MAAMC,SAAS,GAAGA,CAAC;EACjBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,SAAS,CAACK,IAAI,CAAC,CAAC,EAAE;MACpBP,QAAQ,CAACE,SAAS,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;EAED,oBAASJ,OAAA;IAAAU,QAAA,gBAEPV,OAAA;MACKE,QAAQ,EACXI,YACD;MAAAI,QAAA,gBACDV,OAAA;QACSW,KAAK,EACZP,SACD;QACDQ,QAAQ,EACLL,CAAC,IAAKF,YAAY,CAACE,CAAC,CAACM,MAAM,CAACF,KAAK,CACnC;QACDG,WAAW,EAAG,yBAAyB;QACvCC,IAAI,EAAG,GAAG;QACVC,IAAI,EAAG;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACDpB,OAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACNpB,OAAA;QACOqB,IAAI,EAAG,QAAQ;QAAAX,QAAA,EAAE;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAET,CAAC;AAACjB,EAAA,CApCIF,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}